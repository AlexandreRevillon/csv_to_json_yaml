image: debian

before_script:
    - apt-get update -y
    - apt-get upgrade -y
    - apt-get install -y clang-format clang-tidy clang-tools clang make check cppcheck libcppunit-subunit-dev lcov llvm valgrind
    

stages:
    - codestyling
    - check
    - build
    - test
    - coverage
    - clean

job:codestyling:
    stage: codestyling
    script: python3 ./scripts/run-clang-format.py -r src includes tests

job:check:tidy:
    stage: check
    script: clang-tidy src/*.c -- -Iincludes
    when: always

job:check:cppcheck:
    stage: check
    script: cppcheck --enable=warning,style,portability src/*.c
    when: always

job:build:
    stage: build
    script:
        - mkdir build
        - make main
    when: always
    artifacts:
        paths:
            - build/

job:test:
    stage: test
    script:
        - make tests
        - build/convert_csrankings
    when: always
    artifacts:
        paths:
            - build/

job:memcheck:
    stage: test
    script: valgrind build/convert_csrankings
    when: on_success

job:coverage:
    stage: coverage
    script:
        - gcc --version
        - llvm-cov gcov --version
        - echo '#!/bin/sh' > llvm-cov-gcov
        - echo 'exec llvm-cov gcov "$@"' >> llvm-cov-gcov
        - chmod +x llvm-cov-gcov
        - lcov --gcov-tool `pwd`/llvm-cov-gcov --directory build --base-directory . -c -o cov.info
        - mkdir report
        - genhtml cov.info -o report
    coverage: '/^\s*lines\S*\s*(\d+(?:\.\d+)?%)\s*/'
    when: on_success
    dependencies:
        - job:test
    artifacts:
        paths:
            - report/

job:clean:
    stage: clean
    script: echo "make clean"
    when: always
    allow_failure: true
